<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hujf.project.mapper.SmRoleResourceRelationMapper">
  <resultMap id="BaseResultMap" type="com.hujf.project.model.SmRoleResourceRelation">
    <result column="role_resource_pk" jdbcType="VARCHAR" property="roleResourcePk" />
    <result column="role_pk" jdbcType="VARCHAR" property="rolePk" />
    <result column="resource_pk" jdbcType="VARCHAR" property="resourcePk" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_resource_pk, role_pk, resource_pk, create_time, creator
  </sql>
  <select id="selectByExample" parameterType="com.hujf.project.model.SmRoleResourceRelationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sm_role_resource_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.hujf.project.model.SmRoleResourceRelationExample">
    delete from sm_role_resource_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hujf.project.model.SmRoleResourceRelation">
    insert into sm_role_resource_relation (role_resource_pk, role_pk, resource_pk, 
      create_time, creator)
    values (#{roleResourcePk,jdbcType=VARCHAR}, #{rolePk,jdbcType=VARCHAR}, #{resourcePk,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hujf.project.model.SmRoleResourceRelation">
    insert into sm_role_resource_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleResourcePk != null">
        role_resource_pk,
      </if>
      <if test="rolePk != null">
        role_pk,
      </if>
      <if test="resourcePk != null">
        resource_pk,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleResourcePk != null">
        #{roleResourcePk,jdbcType=VARCHAR},
      </if>
      <if test="rolePk != null">
        #{rolePk,jdbcType=VARCHAR},
      </if>
      <if test="resourcePk != null">
        #{resourcePk,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hujf.project.model.SmRoleResourceRelationExample" resultType="java.lang.Long">
    select count(*) from sm_role_resource_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sm_role_resource_relation
    <set>
      <if test="record.roleResourcePk != null">
        role_resource_pk = #{record.roleResourcePk,jdbcType=VARCHAR},
      </if>
      <if test="record.rolePk != null">
        role_pk = #{record.rolePk,jdbcType=VARCHAR},
      </if>
      <if test="record.resourcePk != null">
        resource_pk = #{record.resourcePk,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sm_role_resource_relation
    set role_resource_pk = #{record.roleResourcePk,jdbcType=VARCHAR},
      role_pk = #{record.rolePk,jdbcType=VARCHAR},
      resource_pk = #{record.resourcePk,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>